version: "2.1"

orbs:
  # Get easier access to the Windows machine executor.
  win: "circleci/windows@4.1.1"

jobs:
  windows-tests:
    executor:
      # https://circleci.com/developer/orbs/orb/circleci/windows
      name: "win/server-2022"
      # resource class, can be "medium", "large", "xlarge", "2xlarge"
      size: "medium"

    steps:
      # Commands are run in a Windows virtual machine environment
      - "checkout"
      - run:
          name: "Setup Environment"
          command: |
            python -V
            python -m pip install -v --upgrade pip
            python -m pip install -v .[test]
            pip freeze
      - run:
          name: "Run coverage.py"
          command: |
            python -m coverage run --debug=config -m circleci_python_coverage.tests.test_coveragepy --verbose
            python -m coverage report

      - run:
          name: "Run slipcover"
          command: |
            python .circleci/slipcover circleci_python_coverage -- circleci_python_coverage.tests.test_slipcover --verbose

      - run:
          name: "Persist Coverage to Workspace"
          command: |
            mkdir -p coverage-workspace
            Move-Item .coverage coverage-workspace/.coverage-windows
            Move-Item slipcover.json coverage-workspace/slipcover-windows.slipcover+json

      - persist_to_workspace:
          root: "coverage-workspace"
          paths:
            - "*"

  macos-tests:
    macos:
      xcode: "12.3.0"

    steps:
      - "checkout"

      - run:
          name: "Get Pip"
          command: |
            curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
            python3.9 get-pip.py

      - run:
          name: "Setup Environment"
          command: |
            python3.9 -m venv venv
            venv/bin/python -m pip install -v --upgrade pip
            venv/bin/python -m pip install -v .[test]

      - run:
          name: "Run Tests"
          command: |
            venv/bin/python -m coverage run --debug=config -m circleci_python_coverage.tests.test_coveragepy --verbose
            venv/bin/python -m slipcover --source src/circleci_python_coverage --json --pretty-print --out slipcover.json -m circleci_python_coverage.tests.test_slipcover --verbose
            venv/bin/python -m coverage report

      - run:
          name: "Persist Coverage to Workspace"
          command: |
            mkdir -p coverage-workspace
            mv .coverage coverage-workspace/.coverage-macos
            mv slipcover.json coverage-workspace/slipcover-macos.slipcover+json

      - persist_to_workspace:
          root: "coverage-workspace"
          paths:
            - "*"

  linux-tests:
    docker:
      - image: "nixos/nix:2.5.1"

    environment:
      NIX_CONFIG: "experimental-features = nix-command"
      NIXPKGS: "https://github.com/NixOS/nixpkgs/archive/28abc4e43a24d28729509e2d83f5c4f3b3418189.tar.gz"

    steps:
      - run: &FIX_CA_CERTS
          name: "Fix CA Certificates"
          command: |
            mkdir -p /etc/ssl/certs/
            ln -s $NIX_SSL_CERT_FILE /etc/ssl/certs/

      - "checkout"

      - run:
          name: "Run Test Suite"
          command: |
            nix-build --cores 5 tests.nix -A tests

      - run:
          name: "Persist Coverage to Workspace"
          command: |
            mkdir -p coverage-workspace
            cp ./result/.coverage coverage-workspace/.coverage-linux
            cp ./result/slipcover.json coverage-workspace/slipcover-linux.slipcover+json

      - persist_to_workspace:
          root: "coverage-workspace"
          paths:
            - "*"

  finish-coverage:
    docker:
      - image: "nixos/nix:2.8.1"

    steps:
      - "checkout"
      - attach_workspace:
          at: "coverage-workspace"

      - store_artifacts:
          path: "coverage-workspace"

      - run:
          name: "Finish Coverage Report"
          command: |
            find .
            .circleci/finish-coverage-report coverage-workspace



workflows:
  version: 2
  everything:
    jobs:
    - "linux-tests"
    - "macos-tests"
    - "windows-tests"
    - "finish-coverage":
        # Make sure it depends on all coverage-collecting jobs!
        requires:
          - "linux-tests"
          - "macos-tests"
          - "windows-tests"
